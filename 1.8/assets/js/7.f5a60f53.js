(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{374:function(t,n,s){t.exports=s.p+"assets/img/image16.55857a30.png"},375:function(t,n,s){t.exports=s.p+"assets/img/image17.4b681194.png"},395:function(t,n,s){"use strict";s.r(n);var a=s(45),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"manually-install-and-configure-google-anthos-1-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manually-install-and-configure-google-anthos-1-8"}},[t._v("#")]),t._v(" Manually Install and configure Google Anthos 1.8")]),t._v(" "),a("h2",{attrs:{id:"creating-admin-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-admin-cluster"}},[t._v("#")]),t._v(" Creating Admin Cluster")]),t._v(" "),a("ol",[a("li",[t._v("In the following example, all service accounts are automatically\ncreated by the bmctl create config command")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(" bmctl create config -c ***ADMIN_CLUSTER_NAME*** --enable-apis     --create-service-accounts --project-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("***CLOUD_PROJECT_ID***\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("ADMIN_CLUSTER_NAME")])]),t._v(": the name of the new cluster.")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("CLOUD_PROJECT_ID")])]),t._v(": your Google Cloud project ID.")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Run the below command to a config file for admin cluster named admin1 associated with project ID my-gcp-project.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(" bmctl create config -c admin1\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("The file is written to bmctl-workspace/admin1/admin1.yaml.")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Run the below command to create admin cluster.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bmctl create cluster --c admin1\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Sample manifests file for creating admin cluster on bare metal")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" gcrKeyPath:\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bmctl-workspace/.sa-keys/anthos-on-proliant-dl-d46105613458.json\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sshPrivateKeyPath: \\<path to SSH private key, used for node access\\>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sshPrivateKeyPath: /home/user/.ssh/id_rsa\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" gkeConnectAgentServiceAccountKeyPath:\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bmctl-workspace/.sa-keys/anthos-on-proliant-dl-026fe05e49f6.json\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" gkeConnectRegisterServiceAccountKeyPath:\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bmctl-workspace/.sa-keys/anthos-on-proliant-dl-3942a98cc261.json\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" cloudOperationsServiceAccountKeyPath:\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bmctl-workspace/.sa-keys/anthos-on-proliant-dl-ee7fc370c8a3.json\n")])])]),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("admin1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baremetal.cluster.gke.io/v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("admin1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" spec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cluster type. This can be:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1) admin: to create an admin cluster. This can later be used to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" create user clusters.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2) user: to create a user cluster. Requires an existing admin")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cluster.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3) hybrid: to create a hybrid cluster that runs admin cluster")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" components and user workloads.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4) standalone: to create a cluster that manages itself, runs user")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" workloads"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" but does not manage other clusters.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Anthos cluster version.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" anthosBareMetalVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.8.0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GKE connect configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" gkeConnect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" projectID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" anthos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("proliant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Control plane configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodePoolSpec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Control plane node pools. Typically, this is either a single")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" machine\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or 3 machines if using a high availability deployment.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.101\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.102\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.104\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cluster networking configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterNetwork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pods specify the IP ranges from which pod networks are allocated.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" pods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cidrBlocks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 192.168.0.0/16\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Services specify the network ranges from which service virtual IPs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" are allocated.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can be any RFC1918 range that does not conflict with any other")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" IP range\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in the cluster and node pool resources.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" services"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cidrBlocks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10.96.0.0/20\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load balancer configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" loadBalancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load balancer mode can be either \\'bundled\\' or \\'manual\\'.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In \\'bundled\\' mode a load balancer will be installed on load")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" balancer nodes during cluster creation.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In \\'manual\\' mode the cluster relies on a manually-configured")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" external load balancer.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bundled\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load balancer port configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" ports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specifies the port the load balancer serves the Kubernetes control")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" plane on.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In \\'manual\\' mode the external load balancer must be listening on")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" this port.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlaneLBPort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# There are two load balancer virtual IP (VIP) addresses: one for the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" control plane\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and one for the L7 Ingress service. The VIPs must be in the same")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" subnet as the load balancer nodes.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These IP addresses do not correspond to physical network")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" interfaces.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" vips"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ControlPlaneVIP specifies the VIP to connect to the Kubernetes API")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" server.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This address must not be in the address pools below.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlaneVIP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.220\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IngressVIP specifies the VIP shared by all services for ingress")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" traffic.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Allowed only in non-admin clusters.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This address must be in the address pools below.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ingressVIP: 10.0.0.2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AddressPools is a list of non-overlapping IP ranges for the data")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" plane load balancer.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All addresses must be in the same subnet as the load balancer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodes.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Address pool configuration is only valid for \\'bundled\\' LB mode in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" non"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("admin clusters.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# addressPools:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - name: pool1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# addresses:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Each address must be either in the CIDR form (1.2.3.0/24)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # or range form (1.2.3.1-1.2.3.5).")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - 10.0.0.1-10.0.0.4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A load balancer node pool can be configured to specify nodes used")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" for load balancing.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These nodes are part of the Kubernetes cluster and run regular")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" workloads as well as load balancers.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the node pool config is absent then the control plane nodes are")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" used.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node pool configuration is only valid for \\'bundled\\' LB mode.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nodePoolSpec:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nodes:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - address: \\<Machine 1 IP\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Proxy configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url: http://\\[username:password@\\]domain")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # A list of IPs, hostnames or domains that should not be proxied.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# noProxy:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - 127.0.0.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - localhost")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Logging and Monitoring")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterOperations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cloud project for logs and metrics.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" projectID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" anthos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("proliant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cloud location for logs and metrics.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" us"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("central1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable Cloud Audit Logging if uncommented and set to false.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# disableCloudAuditLogging: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether collection of application logs/metrics should be enabled")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" (in addition to\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# collection of system logs/metrics which correspond to system")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" components such as\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kubernetes control plane or cluster management agents).")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enableApplication: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Storage configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lvpNodeMounts specifies the config for local PersistentVolumes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" backed by mounted disks.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These disks need to be formatted and mounted by the user, which can")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" be done before or after\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" lvpNodeMounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path specifies the host machine path where mounted disks will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" discovered and a local PV\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# will be created for each mount.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /mnt/localpv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("disk\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storageClassName specifies the StorageClass that PVs will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created with. The StorageClass\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is created during cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storageClassName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("disks\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lvpShare specifies the config for local PersistentVolumes backed by")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" subdirectories in a shared filesystem.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These subdirectories are automatically created during cluster")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" creation.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" lvpShare"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path specifies the host machine path where subdirectories will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created on each host. A local PV\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# will be created for each subdirectory.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /mnt/localpv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("share\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storageClassName specifies the StorageClass that PVs will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created with. The StorageClass\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is created during cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storageClassName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("shared\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# numPVUnderSharedPath specifies the number of subdirectories to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" create under path.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" numPVUnderSharedPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NodeConfig specifies the configuration that applies to all nodes in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" the cluster.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodeConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# podDensity specifies the pod density configuration.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" podDensity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# maxPodsPerNode specifies at most how many pods can be run on a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" single node.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" maxPodsPerNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# containerRuntime specifies which container runtime to use for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" scheduling containers on nodes.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# containerd and docker are supported.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" containerRuntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# KubeVirt configuration, uncomment this section if you want to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" install kubevirt to the cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubevirt:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # if useEmulation is enabled, hardware accelerator (i.e relies on")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cpu feature like vmx or svm)\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # will not be attempted. QEMU will be used for software emulation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # useEmulation must be specified for KubeVirt installation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# useEmulation: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Authentication; uncomment this section if you wish to enable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authentication to the cluster with OpenID Connect.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# authentication:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oidc:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # issuerURL specifies the URL of your OpenID provider, such as")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' \\"https'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('//accounts.google.com\\". The Kubernetes API\n'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # server uses this URL to discover public keys for verifying")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" tokens. Must use HTTPS.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# issuerURL: \\<URL for OIDC Provider; required\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # clientID specifies the ID for the client application that makes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authentication requests to the OpenID\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # provider.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clientID: \\<ID for OIDC client application; required\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # clientSecret specifies the secret for the client application.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clientSecret: \\<Secret for OIDC client application; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # kubectlRedirectURL specifies the redirect URL (required) for the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" gcloud CLI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" such as\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# # \\"http://localhost:\\[PORT\\]/callback\\".')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectlRedirectURL: \\<Redirect URL for the gcloud CLI; optional,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' default is \\"http'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('//kubectl.redirect.invalid\\"\\'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # username specifies the JWT claim to use as the username. The")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' default is \\"sub\\"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" which is expected to be a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # unique identifier of the end user.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# username: \\<JWT claim to use as the username; optional, default is")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' \\"sub\\"\\'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # usernamePrefix specifies the prefix prepended to username claims")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" to prevent clashes with existing names.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# usernamePrefix: \\<Prefix prepended to username claims; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # group specifies the JWT claim that the provider will use to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" return your security groups.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# group: \\<JWT claim to use as the group name; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # groupPrefix specifies the prefix prepended to group claims to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" prevent clashes with existing names.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# groupPrefix: \\<Prefix prepended to group claims; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # scopes specifies additional scopes to send to the OpenID")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("delimited list.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# scopes: \\<Additional scopes to send to OIDC provider as a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("separated list; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # extraParams specifies additional key-value parameters to send to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" the OpenID provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("delimited\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # list.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# extraParams: \\<Additional key-value parameters to send to OIDC")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("separated list; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # proxy specifies the proxy server to use for the cluster to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" connect to your OIDC provider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" if applicable.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Example: https://user:password\\@10.10.10.10:8888. If left blank,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" this defaults to no proxy.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy: \\<Proxy server to use for the cluster to connect to your")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" OIDC provider; optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default is no proxy\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # deployCloudConsoleProxy specifies whether to deploy a reverse")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" proxy in the cluster to allow Google Cloud\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Console access to the on-premises OIDC provider for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authenticating users. If your identity provider is not\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # reachable over the public internet, and you wish to authenticate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" using Google Cloud Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then this field\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # must be set to true. If left blank, this field defaults to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" false.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deployCloudConsoleProxy: \\<Whether to deploy a reverse proxy for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" Google Cloud Console authentication; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # certificateAuthorityData specifies a Base64 PEM-encoded")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" certificate authority certificate of your identity\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # provider. It\\'s not needed if your identity provider\\'s")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" certificate was issued by a well"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("known public CA.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # However, if deployCloudConsoleProxy is true, then this value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" must be provided"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" even for a well"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("known public\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # CA.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# certificateAuthorityData: \\<Base64 PEM-encoded certificate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authority certificate of your OIDC provider; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node access configuration; uncomment this section if you wish to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" use a non"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("root user\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with passwordless sudo capability for machine login.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodeAccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" loginUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" username\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node pools for worker nodes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baremetal.cluster.gke.io/v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePool\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("admin1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" spec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.105\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.106\n\n")])])]),a("h4",{attrs:{id:"logging-in-to-a-cluster-from-the-cloud-console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging-in-to-a-cluster-from-the-cloud-console"}},[t._v("#")]),t._v(" Logging in to a cluster from the Cloud Console")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("export k= bmctl-workspace/admin5/admin5-kubeconfig")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create serviceaccount "),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("cluster-user")])]),t._v(" --clusterrole\nview --serviceaccount default:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl get serviceaccounts --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl describe serviceaccounts "),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("cluster-user-googleanthos")])]),t._v("\n--clusterrole view --serviceaccount default:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v("\n--kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("addon-cluster-admin5")])]),t._v("\n--clusterrole cloud-console-reader --serviceaccount\ndefault:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("TOKENNAME=`kubectl get serviceaccount/"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" -o\njsonpath='{.secrets[0].name}' --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl get secret $TOKENNAME -o jsonpath='{.data.token}' --$k\n| base64 --decode")])])]),t._v(" "),a("p",[t._v("here token will be generated copy and paste in the gcloud console")]),t._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[t._v("On Google cloude console, Navigate to admin cluster and click on\nnodes, it will displays as follows")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(374),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"creating-user-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-user-cluster"}},[t._v("#")]),t._v(" Creating User Cluster")]),t._v(" "),a("ol",[a("li",[t._v("Create a user cluster config file with the bmctl create\nconfig command:")])]),t._v(" "),a("p",[t._v("bmctl create config -c "),a("em",[a("strong",[t._v("USER_CLUSTER_NAME")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("blockquote",[a("p",[t._v("The file is written to bmctl-workspace/user1/user1.yaml. The generic\npath to the file is bmctl-workspace/"),a("em",[a("strong",[t._v("CLUSTER\nNAME")])]),t._v("/"),a("em",[a("strong",[t._v("CLUSTER_NAME.yaml")])])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Issue the bmctl command to apply the user cluster config and create\nthe cluster:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bmctl create cluster -c ***USER_CLUSTER_NAME*** --kubeconfig ***ADMIN_KUBECONFIG***\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("USER_CLUSTER_NAME")])]),t._v(": the cluster name created in the previous section.")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("ADMIN_KUBECONFIG")])]),t._v(": the path to the admin cluster kubeconfig file.")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Sample user.yaml file is as below.")])]),t._v(" "),a("blockquote",[a("p",[t._v("bmctl configuration variables. Because this section is valid YAML but not a valid Kubernetes resource, this section can only be included when using bmctl to create the initial admin/hybrid cluster. Afterwards, when creating user clusters by directly applying the cluster and node pool resources to the existing cluster, you must remove this section.")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gcrKeyPath: \\<path to GCR service account key\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sshPrivateKeyPath: \\<path to SSH private key, used for node access\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sshPrivateKeyPath: /home/user/.ssh/id_rsa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gkeConnectAgentServiceAccountKeyPath: \\<path to Connect agent")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" service account key\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gkeConnectRegisterServiceAccountKeyPath: \\<path to Hub registration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" service account key\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cloudOperationsServiceAccountKeyPath: \\<path to Cloud Operations")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" service account key\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baremetal.cluster.gke.io/v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" spec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cluster type. This can be:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1) admin: to create an admin cluster. This can later be used to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" create user clusters.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2) user: to create a user cluster. Requires an existing admin")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cluster.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3) hybrid: to create a hybrid cluster that runs admin cluster")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" components and user workloads.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4) standalone: to create a cluster that manages itself, runs user")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" workloads"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" but does not manage other clusters.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Anthos cluster version.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" anthosBareMetalVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.8.0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GKE connect configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" gkeConnect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" projectID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" anthos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("proliant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Control plane configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodePoolSpec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Control plane node pools. Typically, this is either a single")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" machine\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or 3 machines if using a high availability deployment.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.108\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cluster networking configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterNetwork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pods specify the IP ranges from which pod networks are allocated.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" pods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cidrBlocks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 192.168.0.0/16\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Services specify the network ranges from which service virtual IPs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" are allocated.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can be any RFC1918 range that does not conflict with any other")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" IP range\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in the cluster and node pool resources.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" services"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cidrBlocks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10.96.0.0/20\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load balancer configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" loadBalancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bundled\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" ports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlaneLBPort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" vips"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" controlPlaneVIP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.236\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" ingressVIP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.237\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" addressPools"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pool1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" addresses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 20.0.61.237"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("20.0.61.250\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterOperations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cloud project for logs and metrics.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" projectID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" anthos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("proliant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cloud location for logs and metrics.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" us"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("central1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable Cloud Audit Logging if uncommented and set to false.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# disableCloudAuditLogging: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether collection of application logs/metrics should be enabled")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" (in addition to\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# collection of system logs/metrics which correspond to system")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" components such as\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kubernetes control plane or cluster management agents).")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enableApplication: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Storage configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lvpNodeMounts specifies the config for local PersistentVolumes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" backed by mounted disks.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These disks need to be formatted and mounted by the user, which can")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" be done before or after\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" lvpNodeMounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path specifies the host machine path where mounted disks will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" discovered and a local PV\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# will be created for each mount.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /mnt/localpv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("disk\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storageClassName specifies the StorageClass that PVs will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created with. The StorageClass\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is created during cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storageClassName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("disks\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lvpShare specifies the config for local PersistentVolumes backed by")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" subdirectories in a shared filesystem.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These subdirectories are automatically created during cluster")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" creation.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" lvpShare"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path specifies the host machine path where subdirectories will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created on each host. A local PV\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# will be created for each subdirectory.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /mnt/localpv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("share\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storageClassName specifies the StorageClass that PVs will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" created with. The StorageClass\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is created during cluster creation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" storageClassName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("shared\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# numPVUnderSharedPath specifies the number of subdirectories to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" create under path.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" numPVUnderSharedPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NodeConfig specifies the configuration that applies to all nodes in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" the cluster.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodeConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# podDensity specifies the pod density configuration.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" podDensity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# maxPodsPerNode specifies at most how many pods can be run on a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" single node.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" maxPodsPerNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# containerRuntime specifies which container runtime to use for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" scheduling containers on nodes.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# containerd and docker are supported.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" containerRuntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# KubeVirt configuration, uncomment this section if you want to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" install kubevirt to the cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubevirt:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # if useEmulation is enabled, hardware accelerator (i.e relies on")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" cpu feature like vmx or svm)\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # will not be attempted. QEMU will be used for software emulation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # useEmulation must be specified for KubeVirt installation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# useEmulation: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Authentication; uncomment this section if you wish to enable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authentication to the cluster with OpenID Connect.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# authentication:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oidc:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # issuerURL specifies the URL of your OpenID provider, such as")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' \\"https'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('//accounts.google.com\\". The Kubernetes API\n'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # server uses this URL to discover public keys for verifying")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" tokens. Must use HTTPS.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# issuerURL: \\<URL for OIDC Provider; required\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # clientID specifies the ID for the client application that makes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authentication requests to the OpenID\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # provider.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clientID: \\<ID for OIDC client application; required\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # clientSecret specifies the secret for the client application.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clientSecret: \\<Secret for OIDC client application; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # kubectlRedirectURL specifies the redirect URL (required) for the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" gcloud CLI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" such as\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# # \\"http://localhost:\\[PORT\\]/callback\\".')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectlRedirectURL: \\<Redirect URL for the gcloud CLI; optional,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' default is \\"http'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('//kubectl.redirect.invalid\\"\\'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # username specifies the JWT claim to use as the username. The")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' default is \\"sub\\"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" which is expected to be a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # unique identifier of the end user.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# username: \\<JWT claim to use as the username; optional, default is")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(' \\"sub\\"\\'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # usernamePrefix specifies the prefix prepended to username claims")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" to prevent clashes with existing names.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# usernamePrefix: \\<Prefix prepended to username claims; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # group specifies the JWT claim that the provider will use to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" return your security groups.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# group: \\<JWT claim to use as the group name; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # groupPrefix specifies the prefix prepended to group claims to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" prevent clashes with existing names.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# groupPrefix: \\<Prefix prepended to group claims; optional\\>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # scopes specifies additional scopes to send to the OpenID")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("delimited list.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# scopes: \\<Additional scopes to send to OIDC provider as a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("separated list; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # extraParams specifies additional key-value parameters to send to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" the OpenID provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("delimited\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # list.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# extraParams: \\<Additional key-value parameters to send to OIDC")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" provider as a comma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("separated list; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # proxy specifies the proxy server to use for the cluster to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" connect to your OIDC provider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" if applicable.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Example: https://user:password\\@10.10.10.10:8888. If left blank,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" this defaults to no proxy.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy: \\<Proxy server to use for the cluster to connect to your")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" OIDC provider; optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default is no proxy\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # deployCloudConsoleProxy specifies whether to deploy a reverse")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" proxy in the cluster to allow Google Cloud\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Console access to the on-premises OIDC provider for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authenticating users. If your identity provider is not\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # reachable over the public internet, and you wish to authenticate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" using Google Cloud Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then this field\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # must be set to true. If left blank, this field defaults to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" false.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deployCloudConsoleProxy: \\<Whether to deploy a reverse proxy for")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" Google Cloud Console authentication; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # certificateAuthorityData specifies a Base64 PEM-encoded")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" certificate authority certificate of your identity\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # provider. It\\'s not needed if your identity provider\\'s")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" certificate was issued by a well"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("known public CA.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # However, if deployCloudConsoleProxy is true, then this value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" must be provided"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" even for a well"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("known public\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # CA.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# certificateAuthorityData: \\<Base64 PEM-encoded certificate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" authority certificate of your OIDC provider; optional\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node access configuration; uncomment this section if you wish to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" use a non"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("root user\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with passwordless sudo capability for machine login.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodeAccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" loginUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" username\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node pools for worker nodes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" apiVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baremetal.cluster.gke.io/v1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePool\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" spec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" clusterName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20.0.61.107\n\n")])])]),a("h4",{attrs:{id:"logging-in-to-a-cluster-from-the-cloud-console-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging-in-to-a-cluster-from-the-cloud-console-2"}},[t._v("#")]),t._v(" Logging in to a cluster from the Cloud Console")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("export k= bmctl-workspace/user1/user1-kubeconfig")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create serviceaccount "),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("cluster-user")])]),t._v(" --clusterrole\nview --serviceaccount default:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl get serviceaccounts --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl describe serviceaccounts "),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("cluster-user-googleanthos")])]),t._v("\n--clusterrole view --serviceaccount default:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v("\n--kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl create clusterrolebinding "),a("em",[a("strong",[t._v("addon-cluster-admin5")])]),t._v("\n--clusterrole cloud-console-reader --serviceaccount\ndefault:"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("TOKENNAME=`kubectl get serviceaccount/"),a("em",[a("strong",[t._v("googleanthos")])]),t._v(" -o\njsonpath='{.secrets[0].name}' --kubeconfig $k")])]),t._v(" "),a("li",[a("p",[t._v("kubectl get secret $TOKENNAME -o jsonpath='{.data.token}' --$k\n| base64 --decode")])])]),t._v(" "),a("p",[t._v("here token will be generated copy and paste in the gcloud console")]),t._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[t._v("Once logged into the user cluster, click on nodes it will displays\nas follows.")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(375),alt:""}})])])}),[],!1,null,null,null);n.default=e.exports}}]);